{"/home/travis/build/npmtest/node-npmtest-homebridge-bluetooth/test.js":"/* istanbul instrument in package npmtest_homebridge_bluetooth */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireExampleJsFromReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - post-init\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - post-init\n    case 'browser':\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-homebridge-bluetooth/lib.npmtest_homebridge_bluetooth.js":"/* istanbul instrument in package npmtest_homebridge_bluetooth */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_homebridge_bluetooth = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_homebridge_bluetooth = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-homebridge-bluetooth/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-homebridge-bluetooth && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_homebridge_bluetooth */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_homebridge_bluetooth\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // post-init\n    // run browser js-env code - post-init\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_homebridge_bluetooth.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        local.assetsDict['/assets.npmtest_homebridge_bluetooth.rollup.js'] =\n            local.assetsDict['/assets.npmtest_homebridge_bluetooth.rollup.js'] ||\n            local.fs.readFileSync(\n                // buildCustomOrg-hack\n                local.npmtest_homebridge_bluetooth.__dirname +\n                    '/lib.npmtest_homebridge_bluetooth.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-homebridge-bluetooth/node_modules/homebridge-bluetooth/index.js":"var Noble, Accessory, Service, Characteristic, UUIDGen;\r\n\r\nmodule.exports = function (homebridge) {\r\n  console.log(\"Homebridge API version: \" + homebridge.version);\r\n\r\n  Noble = require('noble');\r\n  Accessory = homebridge.platformAccessory;\r\n  Service = homebridge.hap.Service;\r\n  Characteristic = homebridge.hap.Characteristic;\r\n  UUIDGen = homebridge.hap.uuid;\r\n\r\n  BluetoothCharacteristic = require(\"./source/characteristic.js\")(Characteristic);\r\n  BluetoothService = require(\"./source/service.js\")(Service, BluetoothCharacteristic);\r\n  BluetoothAccessory = require(\"./source/accessory.js\")(Accessory, BluetoothService);\r\n  BluetoothPlatform = require(\"./source/platform.js\")(Noble, UUIDGen, Accessory, BluetoothAccessory);\r\n\r\n  homebridge.registerPlatform(\"homebridge-bluetooth\", \"Bluetooth\", BluetoothPlatform, true);\r\n};\r\n","/home/travis/build/npmtest/node-npmtest-homebridge-bluetooth/node_modules/homebridge-bluetooth/source/accessory.js":"var Accessory, BluetoothService;\r\nvar Chalk = require('chalk');\r\n\r\nmodule.exports = function (accessory, bluetoothService) {\r\n  Accessory = accessory;\r\n  BluetoothService = bluetoothService;\r\n\r\n  return BluetoothAccessory;\r\n};\r\n\r\n\r\nfunction BluetoothAccessory(log, config) {\r\n  this.log = log;\r\n\r\n  if (!config.name) {\r\n    throw new Error(\"Missing mandatory config 'name'\");\r\n  }\r\n  this.name = config.name;\r\n  this.prefix = Chalk.blue(\"[\" + config.name + \"]\");\r\n\r\n  if (!config.address) {\r\n    throw new Error(this.prefix + \" Missing mandatory config 'address'\");\r\n  }\r\n  this.address = config.address;\r\n\r\n  if (!config.services || !(config.services instanceof Array)) {\r\n    throw new Error(this.prefix + \" Missing mandatory config 'services'\");\r\n  }\r\n\r\n  this.log.debug(this.prefix, \"Initialized | \" + this.name + \" (\" + this.address + \")\");\r\n  this.bluetoothServices = {};\r\n  for (var serviceConfig of config.services) {\r\n    var serviceUUID = trimUUID(serviceConfig.UUID);\r\n    this.bluetoothServices[serviceUUID] = new BluetoothService(this.log, serviceConfig,\r\n                                                               this.prefix);\r\n  }\r\n\r\n  var informationServiceUUID = trimUUID('180A')\r\n  if (!(informationServiceUUID in this.bluetoothServices)) {\r\n    informationServiceConfig = {\r\n      \"name\": \"Information\",\r\n      \"type\": \"AccessoryInformation\",\r\n      \"UUID\": \"180A\",\r\n      \"characteristics\": [\r\n        {\"type\": \"Manufacturer\", \"UUID\": \"2A29\"},\r\n        {\"type\": \"Model\", \"UUID\": \"2A24\"},\r\n        {\"type\": \"SerialNumber\", \"UUID\": \"2A25\"}\r\n      ]\r\n    };\r\n    this.bluetoothServices[informationServiceUUID]\r\n        = new BluetoothService(this.log, informationServiceConfig, this.prefix);\r\n  }\r\n\r\n  this.homebridgeAccessory = null;\r\n  this.nobleAccessory = null;\r\n}\r\n\r\n\r\nBluetoothAccessory.prototype.connect = function (nobleAccessory, homebridgeAccessory) {\r\n  this.log.info(this.prefix, \"Connected | \" + this.name + \" (\" + this.address + \")\");\r\n  this.homebridgeAccessory = homebridgeAccessory;\r\n  this.homebridgeAccessory.on('identify', this.identification.bind(this));\r\n  this.homebridgeAccessory.updateReachability(true);\r\n\r\n  this.nobleAccessory = nobleAccessory;\r\n  this.nobleAccessory.once('disconnect', this.disconnect.bind(this));\r\n  this.nobleAccessory.discoverServices([], this.discoverServices.bind(this));\r\n};\r\n\r\n\r\nBluetoothAccessory.prototype.discoverServices = function (error, nobleServices) {\r\n  if (error) {\r\n    this.log.error(this.prefix, \"Discover services failed | \" + error);\r\n    return;\r\n  }\r\n  if (nobleServices.length == 0) {\r\n    this.log.warn(this.prefix, \"No services discovered\");\r\n    return;\r\n  }\r\n\r\n  for (var nobleService of nobleServices) {\r\n    var serviceUUID = trimUUID(nobleService.uuid);\r\n    var bluetoothService = this.bluetoothServices[serviceUUID];\r\n    if (!bluetoothService) {\r\n      if (nobleService.uuid != '1800' && nobleService.uuid != '1801') {\r\n        this.log.debug(this.prefix, \"Ignored | Service (\" + nobleService.uuid + \")\");\r\n      }\r\n      continue;\r\n    }\r\n\r\n    var homebridgeService = this.homebridgeAccessory.getService(bluetoothService.class);\r\n    if (!homebridgeService) {\r\n      homebridgeService = this.homebridgeAccessory.addService(bluetoothService.class,\r\n                                                              bluetoothService.name);\r\n    }\r\n    bluetoothService.connect(nobleService, homebridgeService);\r\n  }\r\n};\r\n\r\n\r\nBluetoothAccessory.prototype.identification = function (paired, callback) {\r\n  this.log.info(this.prefix, \"Identify\");\r\n  callback();\r\n};\r\n\r\n\r\nBluetoothAccessory.prototype.disconnect = function (error) {\r\n  if (error) {\r\n    this.log.error(\"Disconnecting failed | \" + this.name + \" (\" + this.address + \") | \" + error);\r\n  }\r\n\r\n  for (var serviceUUID in this.bluetoothServices) {\r\n    this.bluetoothServices[serviceUUID].disconnect();\r\n  }\r\n  if (this.nobleAccessory && this.homebridgeAccessory) {\r\n    this.homebridgeAccessory.removeAllListeners('identify');\r\n    this.homebridgeAccessory.updateReachability(false);\r\n    this.homebridgeAccessory = null;\r\n    this.nobleAccessory.removeAllListeners();\r\n    this.nobleAccessory = null;\r\n    this.log.info(this.prefix, \"Disconnected\");\r\n  }\r\n};\r\n\r\n\r\nfunction trimUUID(uuid) {\r\n  return uuid.toLowerCase().replace(/:/g, \"\").replace(/-/g, \"\");\r\n}\r\n","/home/travis/build/npmtest/node-npmtest-homebridge-bluetooth/node_modules/homebridge-bluetooth/source/characteristic.js":"var Characteristic;\r\nvar Chalk = require('chalk');\r\n\r\nmodule.exports = function (characteristic) {\r\n  Characteristic = characteristic;\r\n\r\n  return BluetoothCharacteristic;\r\n};\r\n\r\n\r\nfunction BluetoothCharacteristic(log, config, prefix) {\r\n  this.log = log;\r\n\r\n   if (!config.type) {\r\n    throw new Error(this.prefix + \" Missing mandatory config 'type'\");\r\n  }\r\n  this.type = config.type;\r\n  this.prefix = prefix + \" \" + Chalk.green(\"[\" + this.type + \"]\");\r\n  if (!Characteristic[this.type]) {\r\n    throw new Error(this.prefix + \" Characteristic type '\" + this.type + \"' is not defined. \" +\r\n                    \"See 'HAP-NodeJS/lib/gen/HomeKitType.js' for options.\")\r\n  }\r\n  this.class = Characteristic[this.type]; // For example - Characteristic.Brightness\r\n\r\n  if (!config.UUID) {\r\n    throw new Error(this.prefix + \" Missing mandatory config 'UUID'\");\r\n  }\r\n  this.UUID = config.UUID;\r\n\r\n  this.log.debug(this.prefix, \"Initialized | Characteristic.\" + this.type + \" (\" + this.UUID + \")\");\r\n\r\n  this.homebridgeCharacteristic = null;\r\n  this.nobleCharacteristic = null;\r\n}\r\n\r\n\r\nBluetoothCharacteristic.prototype.connect = function (nobleCharacteristic, homebridgeCharacteristic) {\r\n  this.log.info(this.prefix, \"Connected\");\r\n  this.log.debug(this.prefix, \"Characteristic.\" + this.type + \" (\" + this.UUID + \")\");\r\n  this.homebridgeCharacteristic = homebridgeCharacteristic;\r\n\r\n  this.nobleCharacteristic = nobleCharacteristic;\r\n  for (var permission of this.homebridgeCharacteristic.props['perms']) {\r\n    switch (permission) {\r\n      case Characteristic.Perms.READ:\r\n        if (this.nobleCharacteristic.properties.indexOf('read') >= 0) {\r\n          this.homebridgeCharacteristic.on('get', this.get.bind(this));\r\n        } else {\r\n          this.log.warn(this.prefix, \"Read from bluetooth characteristic not permitted\");\r\n        }\r\n        break;\r\n      case Characteristic.Perms.WRITE:\r\n        if (this.nobleCharacteristic.properties.indexOf('write') >= 0) {\r\n          this.homebridgeCharacteristic.on('set', this.set.bind(this));\r\n        } else {\r\n          this.log.warn(this.prefix, \"Write to bluetooth characteristic not permitted\");\r\n        }\r\n        break;\r\n      case Characteristic.Perms.NOTIFY:\r\n        if (this.nobleCharacteristic.properties.indexOf('notify') >= 0) {\r\n          this.nobleCharacteristic.on('read', this.notify.bind(this));\r\n          this.nobleCharacteristic.subscribe(function (error) {\r\n            if (error) {\r\n              this.log.warn(this.prefix, \"Subscribe to bluetooth characteristic failed\");\r\n            }\r\n          }.bind(this));\r\n        } else {\r\n          this.log.warn(this.prefix, \"Subscribe to bluetooth characteristic not permitted\");\r\n        }\r\n        break;\r\n    }\r\n  }\r\n};\r\n\r\n\r\nBluetoothCharacteristic.prototype.get = function (callback) {\r\n  this.nobleCharacteristic.read(function (error, buffer) {\r\n    if (error) {\r\n      this.log.warn(this.prefix, \"Read from bluetooth characteristic failed | \" + error);\r\n      callback(error, null);\r\n      return\r\n    }\r\n    var value = this.fromBuffer(buffer);\r\n    this.log.info(this.prefix, \"Get | \" + value);\r\n    callback(null, value);\r\n  }.bind(this));\r\n};\r\n\r\n\r\nBluetoothCharacteristic.prototype.set = function (value, callback) {\r\n  this.log.info(this.prefix, \"Set | \" + value);\r\n  var buffer = this.toBuffer(value);\r\n  this.nobleCharacteristic.write(buffer, false);\r\n  callback();\r\n};\r\n\r\n\r\nBluetoothCharacteristic.prototype.notify = function (buffer, notification) {\r\n  if (notification) {\r\n    var value = this.fromBuffer(buffer);\r\n    this.log.info(this.prefix, \"Notify | \" + value);\r\n    this.homebridgeCharacteristic.updateValue(value, null, this);\r\n  }\r\n};\r\n\r\n\r\nBluetoothCharacteristic.prototype.toBuffer = function (value) {\r\n  var buffer;\r\n  switch (this.homebridgeCharacteristic.props['format']) {\r\n    case Characteristic.Formats.BOOL: // BLECharCharacteristic\r\n      buffer = Buffer.alloc(1);\r\n      buffer.writeInt8(value ? 1 : 0, 0);\r\n      break;\r\n    case Characteristic.Formats.INT: // BLEIntCharacteristic\r\n      buffer = Buffer.alloc(4);\r\n      buffer.writeInt32LE(value, 0);\r\n      break;\r\n    case Characteristic.Formats.FLOAT: // BLEFloatCharacteristic\r\n      buffer = Buffer.alloc(4);\r\n      buffer.writeFloatLE(value, 0);\r\n      break;\r\n    case Characteristic.Formats.STRING: // BLECharacteristic\r\n      buffer = Buffer.from(value, 'utf8');\r\n      break;\r\n    case Characteristic.Formats.UINT8: // BLEUnsignedCharCharacteristic\r\n      buffer = Buffer.alloc(1);\r\n      buffer.writeUInt8(value, 0);\r\n      break;\r\n    case Characteristic.Formats.UINT16: // BLEUnsignedShortCharacteristic\r\n      buffer = Buffer.alloc(2);\r\n      buffer.writeUInt16(value, 0);\r\n      break;\r\n    case Characteristic.Formats.UINT32: // BLEUnsignedIntCharacteristic\r\n      buffer = Buffer.alloc(4);\r\n      buffer.writeUInt32(value, 0);\r\n      break;\r\n    case Characteristic.Formats.UINT64: // BLEUnsignedLongCharacteristic\r\n      buffer = Buffer.alloc(8);\r\n      buffer.writeUIntLE(value, 0, 8);\r\n      break;\r\n    default:\r\n      this.log.error(this.prefix, \"Unsupported data conversion | \" +\r\n                     this.homebridgeCharacteristic.props['format']);\r\n      buffer = Buffer.alloc(1);\r\n      buffer.writeInt8(0, 0);\r\n      break;\r\n  }\r\n  return buffer;\r\n};\r\n\r\n\r\nBluetoothCharacteristic.prototype.fromBuffer = function (buffer) {\r\n  var value;\r\n  switch (this.homebridgeCharacteristic.props['format']) {\r\n    case Characteristic.Formats.BOOL: // BLECharCharacteristic\r\n      value = buffer.readInt8(0);\r\n      break;\r\n    case Characteristic.Formats.INT: // BLEIntCharacteristic\r\n      value = buffer.readInt32LE(0);\r\n      break;\r\n    case Characteristic.Formats.FLOAT: // BLEFloatCharacteristic\r\n      value = buffer.readFloatLE(0);\r\n      break;\r\n    case Characteristic.Formats.STRING: // BLECharacteristic\r\n      value = buffer.toString('utf8', 0);\r\n      break;\r\n    case Characteristic.Formats.UINT8: // BLEUnsignedCharCharacteristic\r\n      value = buffer.readUInt8(0);\r\n      break;\r\n    case Characteristic.Formats.UINT16: // BLEUnsignedShortCharacteristic\r\n      value = buffer.readUInt16LE(0);\r\n      break;\r\n    case Characteristic.Formats.UINT32: // BLEUnsignedIntCharacteristic\r\n      value = buffer.readUInt32LE(0);\r\n      break;\r\n    case Characteristic.Formats.UINT64: // BLEUnsignedLongCharacteristic\r\n      value = buffer.readUIntLE(0, 8);\r\n      break;\r\n    default:\r\n      value = 0;\r\n      this.log.error(this.prefix, \"Unsupported data conversion | \" +\r\n                     this.homebridgeCharacteristic.props['format']);\r\n  }\r\n  return value;\r\n};\r\n\r\n\r\nBluetoothCharacteristic.prototype.disconnect = function () {\r\n  if (this.nobleCharacteristic && this.homebridgeCharacteristic) {\r\n    if (this.nobleCharacteristic.properties.indexOf('read') >= 0) {\r\n      this.homebridgeCharacteristic.removeAllListeners('get');\r\n    }\r\n    if (this.nobleCharacteristic.properties.indexOf('write') >= 0) {\r\n      this.homebridgeCharacteristic.removeAllListeners('set');\r\n    }\r\n    if (this.nobleCharacteristic.properties.indexOf('notify') >= 0) {\r\n      this.nobleCharacteristic.unsubscribe(null);\r\n      this.nobleCharacteristic.removeAllListeners('read');\r\n    }\r\n    this.homebridgeCharacteristic = null;\r\n    this.nobleCharacteristic = null;\r\n    this.log.info(this.prefix, \"Disconnected\");\r\n  }\r\n};\r\n","/home/travis/build/npmtest/node-npmtest-homebridge-bluetooth/node_modules/homebridge-bluetooth/source/platform.js":"var Noble, UUIDGen, Accessory, BluetoothAccessory;\r\n\r\nmodule.exports = function (noble, uuidGen, accessory, bluetoothAccessory) {\r\n  Noble = noble;\r\n  UUIDGen = uuidGen\r\n  Accessory = accessory;\r\n  BluetoothAccessory = bluetoothAccessory;\r\n\r\n  return BluetoothPlatform;\r\n};\r\n\r\n\r\nfunction BluetoothPlatform(log, config, homebridgeAPI) {\r\n  this.log = log;\r\n\r\n  if (!config.accessories || !(config.accessories instanceof Array)) {\r\n    throw new Error(\"Missing mandatory config 'accessories'\");\r\n  }\r\n  this.bluetoothAccessories = {};\r\n  for (var accessoryConfig of config.accessories) {\r\n    var accessoryAddress = trimAddress(accessoryConfig.address);\r\n    var bluetoothAccessory = new BluetoothAccessory(this.log, accessoryConfig);\r\n    this.bluetoothAccessories[accessoryAddress] = bluetoothAccessory;\r\n  }\r\n  this.cachedHomebridgeAccessories = {};\r\n\r\n  this.homebridgeAPI = homebridgeAPI;\r\n  this.homebridgeAPI.on('didFinishLaunching', this.didFinishLaunching.bind(this));\r\n}\r\n\r\n\r\nBluetoothPlatform.prototype.configureAccessory = function (homebridgeAccessory) {\r\n  var accessoryAddress = homebridgeAccessory.context['address'];\r\n  var bluetoothAccessory = this.bluetoothAccessories[accessoryAddress];\r\n  if (!bluetoothAccessory) {\r\n    this.log.debug(\"Removed | \" + homebridgeAccessory.displayName + \" (\" + accessoryAddress + \")\");\r\n    this.homebridgeAPI.unregisterPlatformAccessories(\"homebridge-bluetooth\", \"Bluetooth\",\r\n                                                     [homebridgeAccessory]);\r\n    return;\r\n  }\r\n\r\n  this.log.debug(\"Persist | \" + homebridgeAccessory.displayName + \" (\" + accessoryAddress + \")\");\r\n  this.cachedHomebridgeAccessories[accessoryAddress] = homebridgeAccessory;\r\n};\r\n\r\n\r\nBluetoothPlatform.prototype.didFinishLaunching = function () {\r\n  Noble.on('stateChange', this.stateChange.bind(this));\r\n};\r\n\r\n\r\nBluetoothPlatform.prototype.stateChange = function (state) {\r\n  if (state != 'poweredOn') {\r\n    this.log.info(\"Stopped | \" + state);\r\n    Noble.stopScanning();\r\n  }\r\n\r\n  this.log.info(\"Started | \" + state);\r\n  Noble.startScanning([], false);\r\n  Noble.on('discover', this.discover.bind(this));\r\n};\r\n\r\n\r\nBluetoothPlatform.prototype.discover = function (nobleAccessory) {\r\n  var accessoryAddress = trimAddress(nobleAccessory.address);\r\n  var bluetoothAccessory = this.bluetoothAccessories[accessoryAddress];\r\n  if (!bluetoothAccessory) {\r\n    this.log.debug(\"Ignored | \" + nobleAccessory.advertisement.localName +\r\n                  \" (\" + nobleAccessory.address + \") | RSSI \" + nobleAccessory.rssi + \"dB\");\r\n    return;\r\n  }\r\n\r\n  this.log.debug(\"Discovered | \" + nobleAccessory.advertisement.localName +\r\n                \" (\" + nobleAccessory.address + \") | RSSI \" + nobleAccessory.rssi + \"dB\");\r\n  nobleAccessory.connect(function (error) {\r\n    this.connect(error, nobleAccessory)\r\n  }.bind(this));\r\n};\r\n\r\n\r\nBluetoothPlatform.prototype.connect = function (error, nobleAccessory) {\r\n  if (error) {\r\n    this.log.error(\"Connecting failed | \" + nobleAccessory.advertisement.localName +\r\n                   \" (\" + nobleAccessory.address + \") | \" + error);\r\n    return;\r\n  }\r\n\r\n  var accessoryAddress = trimAddress(nobleAccessory.address);\r\n  var bluetoothAccessory = this.bluetoothAccessories[accessoryAddress];\r\n  var homebridgeAccessory = this.cachedHomebridgeAccessories[accessoryAddress];\r\n  if (!homebridgeAccessory) {\r\n    homebridgeAccessory = new Accessory(bluetoothAccessory.name,\r\n                                        UUIDGen.generate(bluetoothAccessory.name));\r\n    homebridgeAccessory.context['address'] = accessoryAddress;\r\n    this.homebridgeAPI.registerPlatformAccessories(\"homebridge-bluetooth\", \"Bluetooth\",\r\n                                                   [homebridgeAccessory]);\r\n  } else {\r\n    delete this.cachedHomebridgeAccessories[accessoryAddress];\r\n  }\r\n\r\n  bluetoothAccessory.connect(nobleAccessory, homebridgeAccessory);\r\n  nobleAccessory.once('disconnect', function (error) {\r\n    this.disconnect(nobleAccessory, homebridgeAccessory, error);\r\n  }.bind(this));\r\n\r\n  if (Object.keys(this.cachedHomebridgeAccessories).length > 0) {\r\n    Noble.startScanning([], false);\r\n  }\r\n};\r\n\r\n\r\nBluetoothPlatform.prototype.disconnect = function (nobleAccessory, homebridgeAccessory, error) {\r\n  var accessoryAddress = trimAddress(nobleAccessory.address);\r\n  this.cachedHomebridgeAccessories[accessoryAddress] = homebridgeAccessory;\r\n\r\n  Noble.startScanning([], false);\r\n};\r\n\r\n\r\nfunction trimAddress(address) {\r\n  return address.toLowerCase().replace(/:/g, \"\");\r\n}\r\n","/home/travis/build/npmtest/node-npmtest-homebridge-bluetooth/node_modules/homebridge-bluetooth/source/service.js":"var Service, BluetoothCharacteristic;\r\nvar Chalk = require('chalk');\r\n\r\nmodule.exports = function (service, bluetoothCharacteristic) {\r\n  Service = service;\r\n  BluetoothCharacteristic = bluetoothCharacteristic;\r\n\r\n  return BluetoothService;\r\n};\r\n\r\n\r\nfunction BluetoothService(log, config, prefix) {\r\n  this.log = log;\r\n\r\n  if (!config.name) {\r\n    throw new Error(\"Missing mandatory config 'name'\");\r\n  }\r\n  this.name = config.name;\r\n  this.prefix = prefix + \" \" + Chalk.magenta(\"[\" + this.name + \"]\");\r\n\r\n  if (!config.type) {\r\n    throw new Error(this.prefix + \" Missing mandatory config 'type'\");\r\n  }\r\n  this.type = config.type;\r\n  if (!Service[this.type]) {\r\n    throw new Error(this.prefix + \" Service type '\" + this.type + \"' is not defined. \" +\r\n                    \"See 'HAP-NodeJS/lib/gen/HomeKitType.js' for options.\")\r\n  }\r\n  this.class = Service[this.type]; // For example - Service.Lightbulb\r\n\r\n  if (!config.UUID) {\r\n    throw new Error(this.prefix + \" Missing mandatory config 'UUID'\");\r\n  }\r\n  this.UUID = config.UUID;\r\n\r\n  if (!config.characteristics || !(config.characteristics instanceof Array)) {\r\n    throw new Error(this.prefix + \" Missing mandatory config 'characteristics'\");\r\n  }\r\n\r\n  this.log.debug(this.prefix, \"Initialized | Service.\" + this.type + \" (\" + this.UUID + \")\");\r\n  this.bluetoothCharacteristics = {};\r\n  for (var characteristicConfig of config.characteristics) {\r\n    var characteristicUUID = trimUUID(characteristicConfig.UUID);\r\n    this.bluetoothCharacteristics[characteristicUUID] =\r\n        new BluetoothCharacteristic(this.log, characteristicConfig, this.prefix);\r\n  }\r\n\r\n  this.homebridgeService = null;\r\n  this.nobleService = null;\r\n}\r\n\r\n\r\nBluetoothService.prototype.connect = function (nobleService, homebridgeService) {\r\n  this.log.info(this.prefix, \"Connected\");\r\n  this.log.debug(this.prefix, \"Service.\" + this.type + \" (\" + this.UUID + \")\");\r\n  this.homebridgeService = homebridgeService;\r\n\r\n  this.nobleService = nobleService;\r\n  this.nobleService.discoverCharacteristics([], this.discoverCharacteristics.bind(this));\r\n};\r\n\r\n\r\nBluetoothService.prototype.discoverCharacteristics = function (error, nobleCharacteristics) {\r\n  if (error) {\r\n    this.log.error(this.prefix, \"Discover characteristics failed | \" + error);\r\n    return;\r\n  }\r\n  if (nobleCharacteristics.length == 0) {\r\n    this.log.warn(this.prefix, \"No characteristics discovered\");\r\n    return;\r\n  }\r\n\r\n  for (var nobleCharacteristic of nobleCharacteristics) {\r\n    var characteristicUUID = trimUUID(nobleCharacteristic.uuid);\r\n    var bluetoothCharacteristic = this.bluetoothCharacteristics[characteristicUUID];\r\n    if (!bluetoothCharacteristic) {\r\n      this.log.debug(this.prefix, \"Ignored | Characteristic (\" + nobleCharacteristic.uuid + \")\");\r\n      continue;\r\n    }\r\n\r\n    var homebridgeCharacteristic =\r\n        this.homebridgeService.getCharacteristic(bluetoothCharacteristic.class);\r\n    bluetoothCharacteristic.connect(nobleCharacteristic, homebridgeCharacteristic);\r\n  }\r\n};\r\n\r\n\r\nBluetoothService.prototype.disconnect = function () {\r\n  for (var characteristicUUID in this.bluetoothCharacteristics) {\r\n    this.bluetoothCharacteristics[characteristicUUID].disconnect();\r\n  }\r\n  if (this.nobleCharacteristic && this.homebridgeCharacteristic) {\r\n    this.homebridgeService = null;\r\n    this.nobleService = null;\r\n    this.log.info(this.prefix, \"Disconnected\");\r\n  }\r\n};\r\n\r\n\r\nfunction trimUUID(uuid) {\r\n  return uuid.toLowerCase().replace(/:/g, \"\").replace(/-/g, \"\");\r\n}\r\n"}